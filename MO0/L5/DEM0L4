PAtrones creacionales 
Singleton: Asegura que una clase tenga una única instancia y proporciona un punto de acceso global a ella.

Factory Method: Define una interfaz para crear un objeto, pero permite a las subclases alterar el tipo de objetos que se crean.

Builder: Permite la construcción de objetos complejos paso a paso.


PATRONES ESTRUCTURALES 
Adapter: Permite que interfaces incompatibles colaboren entre sí.

Decorator: Permite añadir funcionalidades a objetos de manera dinámica.

Facade: Proporciona una interfaz unificada para un conjunto de interfaces en un subsistema.

PAGTRONES COMPORTAMENTALES 
Observer: Define una dependencia uno a muchos entre objetos, de manera que cuando uno cambia de estado, todos los dependientes son notificados y actualizados automáticamente.

Strategy: Define una familia de algoritmos, encapsula cada uno y hace que sean intercambiables.